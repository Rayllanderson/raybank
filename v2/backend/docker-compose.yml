version: '3.7'

services:
  raybank:
    image: rayllanderson/raybank:v2.0.1
    container_name: raybank
    environment:
      - SPRING_PROFILES_ACTIVE=hom
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_SCHEMA=raybank
      - KAFKA_BOOTSTRAP-SERVER=kafka:9092
      - KEYCLOAK_REALM=raybank
      - KEYCLOAK_SERVER-URL=http://keycloak:8080
      - KEYCLOAK_CLIENT-ID=raybank-backend-create-user
      - KEYCLOAK_CLIENT-SECRET=8KoaQh9EpjXBN5engNI1licBfLjWdefT
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    networks:
      - raybank-network

  postgres:
    image: 'postgres:alpine'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 12345
    volumes:
      - ../docker-volumes/postgres:/var/lib/postgresql/data
    networks:
      - raybank-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.3
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/realm-export.json
      - -Dkeycloak.profile.feature.upload_scripts=enabled
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    ports:
      - "8443:8080"
    command:
      - start-dev # uma versão mais leve customizada para ambiente de desenvolvimento e testes pensada para rodar na máquina do desenvolvedor
      - -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json
      - --import-realm
    volumes:
      - ../docker-volumes/keycloak/imports:/opt/jboss/keycloak/imports
      - ../docker-volumes/keycloak/provider/custom-event-listener-jar-with-dependencies.jar:/opt/keycloak/providers/custom-event-listener-jar-with-dependencies.jar
    depends_on:
      - keycloak-postgres
    networks:
      - raybank-network

  keycloak-postgres:
    image: 'postgres:alpine'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - ../docker-volumes/raybank/keycloak-postgres:/var/lib/postgresql/data
    networks:
      - raybank-network

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - raybank-network

  kafka:
    image: confluentinc/cp-kafka:6.0.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - raybank-network

  # This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                               cub kafka-ready -b kafka:9092 1 20 && \
                               kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 3 --replication-factor 1 --config retention.ms=10000 --topic keycloak-event-listener-topic'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - raybank-network

networks:
  raybank-network:
    driver: bridge